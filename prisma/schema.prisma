// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  password   String
  restaurants Restaurant[]
  createdAt  DateTime     @default(now())
}

model Restaurant {
  id        String      @id @default(cuid())
  name      String
  phone     String
  address   String?
  owner     User        @relation(fields: [ownerId], references: [id])
  ownerId   String
  tables    Table[]
  menuItems MenuItem[]
  orders    Order[]
  createdAt DateTime    @default(now())
}

model Table {
  id           String      @id @default(cuid())
  name         String
  qr_code_link  String
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId String
  orders       Order[]
}

model MenuItem {
  id           String      @id @default(cuid())
  name         String
  price        String
  category     String
  image        String? 
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId String
  active       Boolean
}

model Order {
  id           String      @id @default(cuid())
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId String
  table        Table?      @relation(fields: [tableId], references: [id])
  tableId      String?
  customerName String?
  customerPhone String?
  items        Json        // store list of menuItem ids and quantities
  status       String      // pending, cooking, paid
  totalAmount  Float
  createdAt    DateTime    @default(now())
}
